
SELECT TOP(10000) * FROM [dbo].[telemetry];
ALTER DATABASE [Maintains] SET RECOVERY BULK_LOGGED;


ALTER TABLE [telemetry] ALTER COLUMN [machineID] INT;

DROP INDEX CI ON [telemetry];
CREATE CLUSTERED INDEX CI ON [dbo].[telemetry]([machineID] ASC,[_datetime] ASC);

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SELECT TOP(10000) * FROM [dbo].[telemetry];
ALTER DATABASE [Maintains] SET RECOVERY BULK_LOGGED;

ALTER TABLE [dbo].[telemetry] ALTER COLUMN [machineID] INT;
ALTER TABLE [dbo].[machines] ALTER COLUMN [machineID] INT;
ALTER TABLE [dbo].[maint] ALTER COLUMN [machineID] INT;
ALTER TABLE [dbo].[errors] ALTER COLUMN [machineID] INT;
ALTER TABLE [dbo].[failures] ALTER COLUMN [machineID] INT;

DROP INDEX CI ON [telemetry];
CREATE CLUSTERED INDEX CI ON [dbo].[telemetry]([machineID] ASC,[_datetime] ASC);

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SELECT * FROM [dbo].[failures]

SELECT [failure],COUNT(*)
FROM [dbo].[failures]
GROUP BY [failure]

SELECT [failure],COUNT(*)
FROM [dbo].[failures]
WHERE [machineID]=1
GROUP BY [failure]

SELECT [failure],COUNT(*)
FROM [dbo].[failures] AS A JOIN [dbo].[machines] AS B ON A.machineID=B.machineID
WHERE B.model='model2'
GROUP BY [failure]

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

DECLARE @dt1 DATETIME2='2015-1-2 07:00:00';
DECLARE @dt2 DATETIME2='2015-1-5 07:00:00';
SELECT [_datetime],[machineID]
	,(SELECT AVG([volt]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-3,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [volt_3m]
	,(SELECT STDEV([volt]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-3,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [volt_3std]
	,(SELECT AVG([rotate]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-3,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [rotate_3m]
	,(SELECT STDEV([rotate]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-3,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [rotate_3std]
	,(SELECT AVG([pressure]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-3,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [pressure_3m]
	,(SELECT STDEV([pressure]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-3,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [pressure_3std]
	,(SELECT AVG([vibration]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-3,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [vibration_3m]
	,(SELECT STDEV([vibration]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-3,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [vibration_3std]	
	,(SELECT AVG([volt]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-6,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [volt_6m]
	,(SELECT STDEV([volt]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-6,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [volt_6std]
	,(SELECT AVG([rotate]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-6,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [rotate_6m]
	,(SELECT STDEV([rotate]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-6,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [rotate_6std]
	,(SELECT AVG([pressure]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-6,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [pressure_6m]
	,(SELECT STDEV([pressure]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-6,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [pressure_6std]
	,(SELECT AVG([vibration]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-6,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [vibration_6m]
	,(SELECT STDEV([vibration]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-6,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [vibration_6std]	
	,(SELECT AVG([volt]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-12,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [volt_12m]
	,(SELECT STDEV([volt]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-12,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [volt_12std]
	,(SELECT AVG([rotate]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-12,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [rotate_12m]
	,(SELECT STDEV([rotate]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-12,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [rotate_12std]
	,(SELECT AVG([pressure]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-12,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [pressure_12m]
	,(SELECT STDEV([pressure]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-12,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [pressure_12std]
	,(SELECT AVG([vibration]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-12,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [vibration_12m]
	,(SELECT STDEV([vibration]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-12,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [vibration_12std]	
	,(SELECT AVG([volt]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-24,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [volt_24m]
	,(SELECT STDEV([volt]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-24,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [volt_24std]
	,(SELECT AVG([rotate]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-24,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [rotate_24m]
	,(SELECT STDEV([rotate]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-24,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [rotate_24std]
	,(SELECT AVG([pressure]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-24,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [pressure_24m]
	,(SELECT STDEV([pressure]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-24,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [pressure_24std]
	,(SELECT AVG([vibration]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-24,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [vibration_24m]
	,(SELECT STDEV([vibration]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-24,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [vibration_24std]	
FROM [dbo].[telemetry] AS tel
WHERE tel._datetime>=@dt1 AND tel._datetime<=@dt2 AND tel.machineID=2;

-----------------------------------------------------------------------------------------------------------

DECLARE @dt1 DATETIME2='2015-1-2 07:00:00';
SELECT [_datetime],[machineID]
	,(SELECT AVG([volt]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-3,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [volt_3m]
	,(SELECT STDEV([volt]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-3,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [volt_3std]
	,(SELECT AVG([rotate]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-3,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [rotate_3m]
	,(SELECT STDEV([rotate]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-3,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [rotate_3std]
	,(SELECT AVG([pressure]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-3,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [pressure_3m]
	,(SELECT STDEV([pressure]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-3,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [pressure_3std]
	,(SELECT AVG([vibration]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-3,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [vibration_3m]
	,(SELECT STDEV([vibration]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-3,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [vibration_3std]	
	,(SELECT AVG([volt]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-6,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [volt_6m]
	,(SELECT STDEV([volt]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-6,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [volt_6std]
	,(SELECT AVG([rotate]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-6,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [rotate_6m]
	,(SELECT STDEV([rotate]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-6,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [rotate_6std]
	,(SELECT AVG([pressure]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-6,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [pressure_6m]
	,(SELECT STDEV([pressure]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-6,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [pressure_6std]
	,(SELECT AVG([vibration]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-6,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [vibration_6m]
	,(SELECT STDEV([vibration]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-6,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [vibration_6std]	
	,(SELECT AVG([volt]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-12,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [volt_12m]
	,(SELECT STDEV([volt]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-12,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [volt_12std]
	,(SELECT AVG([rotate]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-12,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [rotate_12m]
	,(SELECT STDEV([rotate]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-12,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [rotate_12std]
	,(SELECT AVG([pressure]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-12,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [pressure_12m]
	,(SELECT STDEV([pressure]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-12,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [pressure_12std]
	,(SELECT AVG([vibration]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-12,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [vibration_12m]
	,(SELECT STDEV([vibration]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-12,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [vibration_12std]	
	,(SELECT AVG([volt]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-24,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [volt_24m]
	,(SELECT STDEV([volt]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-24,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [volt_24std]
	,(SELECT AVG([rotate]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-24,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [rotate_24m]
	,(SELECT STDEV([rotate]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-24,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [rotate_24std]
	,(SELECT AVG([pressure]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-24,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [pressure_24m]
	,(SELECT STDEV([pressure]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-24,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [pressure_24std]
	,(SELECT AVG([vibration]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-24,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [vibration_24m]
	,(SELECT STDEV([vibration]) FROM [telemetry] WHERE [_datetime]>=DATEADD(HOUR,-24,tel._datetime) AND [_datetime]<tel._datetime AND [machineID]=tel.[machineID]) AS [vibration_24std]	
INTO [telemetry_Data1]
FROM [dbo].[telemetry] AS tel
WHERE tel._datetime>=@dt1;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SELECT * FROM [dbo].[errors]
ALTER TABLE [dbo].[errors] ALTER COLUMN [machineID] INT;
SELECT DISTINCT [errorID] FROM [dbo].[errors]

WITH Temp
AS
(
	SELECT [_datetime],[machineID]
		,[error1] AS Error1Sum
		,[error2] AS Error2Sum
		,[error3] AS Error3Sum
		,[error4] AS Error4Sum
		,[error5] AS Error5Sum
	FROM dbo.errors
	PIVOT (COUNT([errorID]) FOR [errorID] IN([error1],[error2],[error3],[error4],[error5])) AS P
)
--SELECT * FROM Temp

SELECT t1.[_datetime],t1.[machineID]
	,ISNULL(t2.[Error1Sum],0) AS [Error1Sum]
	,ISNULL(t2.[Error2Sum],0) AS [Error2Sum]
	,ISNULL(t2.[Error3Sum],0) AS [Error3Sum]
	,ISNULL(t2.[Error4Sum],0) AS [Error4Sum]
	,ISNULL(t2.[Error5Sum],0) AS [Error5Sum]
--INTO PivotError
FROM [dbo].[telemetry] AS t1 LEFT JOIN Temp AS t2
	ON t1.[machineID]=t2.[machineID] AND t1.[_datetime]=t2.[_datetime]
GO


CREATE CLUSTERED INDEX CI ON PivotError([machineID] ASC,[_datetime] ASC);
GO


SELECT *
	,(SELECT SUM([Error1Sum]) FROM [PivotError] WHERE [_datetime]>=DATEADD(HOUR,-6,pe.[_datetime]) AND [_datetime]<pe.[_datetime] AND [machineID]=pe.[machineID]) AS [Error1_6hr_Sum]
	,(SELECT SUM([Error2Sum]) FROM [PivotError] WHERE [_datetime]>=DATEADD(HOUR,-6,pe.[_datetime]) AND [_datetime]<pe.[_datetime] AND [machineID]=pe.[machineID]) AS [Error2_6hr_Sum]
	,(SELECT SUM([Error3Sum]) FROM [PivotError] WHERE [_datetime]>=DATEADD(HOUR,-6,pe.[_datetime]) AND [_datetime]<pe.[_datetime] AND [machineID]=pe.[machineID]) AS [Error3_6hr_Sum]
	,(SELECT SUM([Error4Sum]) FROM [PivotError] WHERE [_datetime]>=DATEADD(HOUR,-6,pe.[_datetime]) AND [_datetime]<pe.[_datetime] AND [machineID]=pe.[machineID]) AS [Error4_6hr_Sum]
	,(SELECT SUM([Error5Sum]) FROM [PivotError] WHERE [_datetime]>=DATEADD(HOUR,-6,pe.[_datetime]) AND [_datetime]<pe.[_datetime] AND [machineID]=pe.[machineID]) AS [Error5_6hr_Sum]
INTO [PivotError2]
FROM [dbo].[PivotError] AS pe;
GO

SELECT TOP(10000) * FROM [PivotError2];
CREATE CLUSTERED INDEX CI ON [PivotError2]([machineID],[_datetime]);

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

WITH Temp
AS
(
	SELECT [_datetime],[machineID]
		,[comp1] AS Comp1
		,[comp2] AS Comp2
		,[comp3] AS Comp3
		,[comp4] AS Comp4
	FROM [dbo].[maint]
	PIVOT (COUNT([comp]) FOR [comp] IN([comp1],[comp2],[comp3],[comp4])) AS P
)

SELECT t1.[_datetime],t1.[machineID]
	,ISNULL(t2.[Comp1],0) AS [Comp1Sum]
	,ISNULL(t2.[Comp2],0) AS [Comp2Sum]
	,ISNULL(t2.[Comp3],0) AS [Comp3Sum]
	,ISNULL(t2.[Comp4],0) AS [Comp4Sum]	
INTO PivotComp
FROM [dbo].[telemetry] AS t1 LEFT JOIN Temp AS t2
	ON t1.[machineID]=t2.[machineID] AND t1.[_datetime]=t2.[_datetime]
GO

CREATE CLUSTERED INDEX CI ON [PivotComp]([machineID],[_datetime]);
GO


SELECT TOP(10000) * FROM PivotComp;


SELECT TOP(10000) *
	,ISNULL(DATEDIFF(HOUR
		,(SELECT MAX(pt.[_datetime]) FROM [PivotComp] AS pt WHERE pt.[Comp1Sum]=1 AND pt.[machineID]=pc.[machineID] AND pt.[_datetime]<pc.[_datetime])
		,pc.[_datetime]),0)/24.0 AS SinceLastComp1_Days
	,ISNULL(DATEDIFF(HOUR
		,(SELECT MAX(pt.[_datetime]) FROM [PivotComp] AS pt WHERE pt.[Comp2Sum]=1 AND pt.[machineID]=pc.[machineID] AND pt.[_datetime]<pc.[_datetime])
		,pc.[_datetime]),0)/24.0 AS SinceLastComp2_Days
	,ISNULL(DATEDIFF(HOUR
		,(SELECT MAX(pt.[_datetime]) FROM [PivotComp] AS pt WHERE pt.[Comp3Sum]=1 AND pt.[machineID]=pc.[machineID] AND pt.[_datetime]<pc.[_datetime])
		,pc.[_datetime]),0)/24.0 AS SinceLastComp3_Days
	,ISNULL(DATEDIFF(HOUR
		,(SELECT MAX(pt.[_datetime]) FROM [PivotComp] AS pt WHERE pt.[Comp4Sum]=1 AND pt.[machineID]=pc.[machineID] AND pt.[_datetime]<pc.[_datetime])
		,pc.[_datetime]),0)/24.0 AS SinceLastComp4_Days
FROM [PivotComp] AS pc
ORDER BY [machineID],[_datetime]


SELECT *
	,ISNULL(DATEDIFF(HOUR
		,(SELECT MAX(pt.[_datetime]) FROM [PivotComp] AS pt WHERE pt.[Comp1Sum]=1 AND pt.[machineID]=pc.[machineID] AND pt.[_datetime]<pc.[_datetime])
		,pc.[_datetime]),0)/24.0 AS SinceLastComp1_Days
	,ISNULL(DATEDIFF(HOUR
		,(SELECT MAX(pt.[_datetime]) FROM [PivotComp] AS pt WHERE pt.[Comp2Sum]=1 AND pt.[machineID]=pc.[machineID] AND pt.[_datetime]<pc.[_datetime])
		,pc.[_datetime]),0)/24.0 AS SinceLastComp2_Days
	,ISNULL(DATEDIFF(HOUR
		,(SELECT MAX(pt.[_datetime]) FROM [PivotComp] AS pt WHERE pt.[Comp3Sum]=1 AND pt.[machineID]=pc.[machineID] AND pt.[_datetime]<pc.[_datetime])
		,pc.[_datetime]),0)/24.0 AS SinceLastComp3_Days
	,ISNULL(DATEDIFF(HOUR
		,(SELECT MAX(pt.[_datetime]) FROM [PivotComp] AS pt WHERE pt.[Comp4Sum]=1 AND pt.[machineID]=pc.[machineID] AND pt.[_datetime]<pc.[_datetime])
		,pc.[_datetime]),0)/24.0 AS SinceLastComp4_Days
INTO [PivotComp2]
FROM [PivotComp] AS pc;

SELECT TOP(10000) * FROM PivotComp2;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE CLUSTERED INDEX CI ON [PivotComp2]([machineID] ASC,[_datetime] ASC);
GO
CREATE CLUSTERED INDEX CI ON [PivotError2]([machineID] ASC,[_datetime] ASC);
GO

--將Error間隔資訊加入 / 將Compnent間隔資訊加入

SELECT TOP(10000) * FROM [dbo].[telemetry_Data1];
SELECT TOP(10000) * FROM [dbo].[PivotComp2];
SELECT TOP(10000) * FROM [dbo].[PivotError2];
SELECT COUNT(*) FROM [dbo].[PivotError2];
SELECT * FROM [dbo].[machines];

WITH T1
AS
(   SELECT B.model,B.age,A.*
	FROM [dbo].[telemetry_Data1] AS A JOIN [dbo].[machines] AS B
		ON A.machineID=B.machineID
)
, T2
AS
(	
	SELECT A.*,B.Error1_6hr_Sum,B.Error2_6hr_Sum,B.Error3_6hr_Sum,B.Error4_6hr_Sum,B.Error5_6hr_Sum
	FROM T1 AS A JOIN [PivotError2] AS B
		ON A.machineID=B.machineID AND A._datetime=B._datetime
)
, T3
AS
(	
	SELECT A.*,B.SinceLastComp1_Days,B.SinceLastComp2_Days,B.SinceLastComp3_Days,B.SinceLastComp4_Days
	FROM T2 AS A JOIN [PivotComp2] AS B
		ON A.machineID=B.machineID AND A._datetime=B._datetime
)
SELECT * INTO [dbo].[telemetry_Data2] FROM T3;
GO


CREATE CLUSTERED INDEX CI ON [telemetry_Data2]([machineID] ASC,[_datetime] ASC);
GO

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--此處是重點
--錯誤時間點的前24小時內，全部要標定為該錯誤

/*
SELECT B.failure,A._datetime,A.model
FROM [telemetry_Data2] AS A LEFT JOIN [dbo].[failures] AS B
	ON A.machineID=B.machineID
		AND A._datetime>=DATEADD(HOUR,-24,B._datetime)
		AND A._datetime<=B._datetime
WHERE A.machineID=1
ORDER BY A._datetime;
*/

SELECT B.failure,A.*
INTO [telemetry_Data3]
FROM [telemetry_Data2] AS A LEFT JOIN [dbo].[failures] AS B
	ON A.machineID=B.machineID
		AND A._datetime>=DATEADD(HOUR,-24,B._datetime)
		AND A._datetime<=B._datetime


SELECT TOP(10000) * FROM [telemetry_Data3];

UPDATE [telemetry_Data3] SET [failure]='OK' WHERE [failure] IS NULL;
GO
CREATE CLUSTERED INDEX CI ON [telemetry_Data3]([machineID] ASC,[_datetime] ASC);
GO


SELECT * FROM [telemetry_Data3] WHERE [model]='model1';
SELECT * FROM [telemetry_Data3] WHERE [machineID]=1;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--TRUNCATE TABLE 模型表_機台
CREATE TABLE 模型表_機台
(
    編號 INT IDENTITY(1,1) PRIMARY KEY,
	模型名稱 NVARCHAR(20),
	模型 VARBINARY(MAX),
	建檔時間 DATETIME2(2) DEFAULT SYSDATETIME()
)
GO

ALTER PROC #TempPP @sqlQuery NVARCHAR(MAX),@trainedModel VARBINARY(MAX) OUTPUT
AS
	EXECUTE sp_execute_external_script @language = N'R'
        ,@script = N' 
		inputData<-data.frame(InputDataSet)	
		cs<-colnames(inputData)
		frm<-paste(cs[1], paste(cs[2:length(cs)], collapse="+"), sep="~")
		model <- rxLogisticRegression(frm,inputData,type = "multiClass")		
		trainedModel<-rxSerializeModel(model, realtimeScoringOnly = TRUE)		
		'
		,@input_data_1 = @sqlQuery
		,@params = N'@trainedModel VARBINARY(MAX) OUTPUT'
		,@trainedModel = @trainedModel OUTPUT;
GO

DECLARE @model VARBINARY(MAX);
DECLARE @query nvarchar(max) = N'SELECT [failure]
	, [volt_3m], [volt_3std], [rotate_3m], [rotate_3std], [pressure_3m], [pressure_3std], [vibration_3m], [vibration_3std]
	, [volt_6m], [volt_6std], [rotate_6m], [rotate_6std], [pressure_6m], [pressure_6std], [vibration_6m], [vibration_6std]
	, [volt_12m], [volt_12std], [rotate_12m], [rotate_12std], [pressure_12m], [pressure_12std], [vibration_12m], [vibration_12std]
	, [volt_24m], [volt_24std], [rotate_24m], [rotate_24std], [pressure_24m], [pressure_24std], [vibration_24m], [vibration_24std]
	, [Error1_6hr_Sum], [Error2_6hr_Sum], [Error3_6hr_Sum], [Error4_6hr_Sum], [Error5_6hr_Sum]
	, [SinceLastComp1_Days], [SinceLastComp2_Days], [SinceLastComp3_Days], [SinceLastComp4_Days]
	FROM [dbo].[telemetry_Data3]
	WHERE [_datetime]<''2015-11-1'' AND [machineID]=1';

EXEC #TempPP @query,@model OUTPUT;
INSERT INTO 模型表_機台(模型名稱,模型) VALUES(N'1號機台_羅吉斯',@model);

-------------------------------------------------------------------------------------------------------

ALTER PROC #TempPP @sqlQuery NVARCHAR(MAX),@trainedModel VARBINARY(MAX) OUTPUT
AS
	EXECUTE sp_execute_external_script @language = N'R'
        ,@script = N' 
		inputData<-data.frame(InputDataSet)	
		cs<-colnames(inputData)
		frm<-paste(cs[1], paste(cs[2:length(cs)], collapse="+"), sep="~")
		model <- rxNeuralNet(frm,inputData,type = "multiClass")		
		trainedModel<-rxSerializeModel(model, realtimeScoringOnly = TRUE)		
		'
		,@input_data_1 = @sqlQuery
		,@params = N'@trainedModel VARBINARY(MAX) OUTPUT'
		,@trainedModel = @trainedModel OUTPUT;
GO


DECLARE @model VARBINARY(MAX);
DECLARE @query nvarchar(max) = N'SELECT [failure]
	, [volt_3m], [volt_3std], [rotate_3m], [rotate_3std], [pressure_3m], [pressure_3std], [vibration_3m], [vibration_3std]
	, [volt_6m], [volt_6std], [rotate_6m], [rotate_6std], [pressure_6m], [pressure_6std], [vibration_6m], [vibration_6std]
	, [volt_12m], [volt_12std], [rotate_12m], [rotate_12std], [pressure_12m], [pressure_12std], [vibration_12m], [vibration_12std]
	, [volt_24m], [volt_24std], [rotate_24m], [rotate_24std], [pressure_24m], [pressure_24std], [vibration_24m], [vibration_24std]
	, [Error1_6hr_Sum], [Error2_6hr_Sum], [Error3_6hr_Sum], [Error4_6hr_Sum], [Error5_6hr_Sum]
	, [SinceLastComp1_Days], [SinceLastComp2_Days], [SinceLastComp3_Days], [SinceLastComp4_Days]
	FROM [dbo].[telemetry_Data3]
	WHERE [_datetime]<''2015-11-1'' AND [machineID]=1';

EXEC #TempPP @query,@model OUTPUT;
INSERT INTO 模型表_機台(模型名稱,模型) VALUES(N'1號機台_類神經',@model);

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--SELECT * FROM 模型表_機台;

DECLARE @query nvarchar(max) = N'SELECT [failure]
	, [volt_3m], [volt_3std], [rotate_3m], [rotate_3std], [pressure_3m], [pressure_3std], [vibration_3m], [vibration_3std]
	, [volt_6m], [volt_6std], [rotate_6m], [rotate_6std], [pressure_6m], [pressure_6std], [vibration_6m], [vibration_6std]
	, [volt_12m], [volt_12std], [rotate_12m], [rotate_12std], [pressure_12m], [pressure_12std], [vibration_12m], [vibration_12std]
	, [volt_24m], [volt_24std], [rotate_24m], [rotate_24std], [pressure_24m], [pressure_24std], [vibration_24m], [vibration_24std]
	, [Error1_6hr_Sum], [Error2_6hr_Sum], [Error3_6hr_Sum], [Error4_6hr_Sum], [Error5_6hr_Sum]
	, [SinceLastComp1_Days], [SinceLastComp2_Days], [SinceLastComp3_Days], [SinceLastComp4_Days]
	FROM [dbo].[telemetry_Data3]
	WHERE [_datetime]>=''2015-11-1'' AND [machineID]=1';
DECLARE @mm VARBINARY(MAX);
SELECT @mm=模型 FROM 模型表_機台 WHERE 編號=1;

EXECUTE sp_execute_external_script @language = N'R',  
	@script = N'   
		testData<-data.frame(InputDataSet)				#傳入測試組
		trainedModel<-rxUnserializeModel(inputModel)	#傳入訓練過的模型
				
		result<-rxPredict(trainedModel, data= testData,extraVarsToWrite=c("failure"))			
		OutputDataSet<-result;	
	'
	,@input_data_1=@query
	,@params=N'@inputModel VARBINARY(MAX)'
	,@inputModel=@mm	
;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--TRUNCATE TABLE 模型表_型號
CREATE TABLE 模型表_型號
(
    編號 INT IDENTITY(1,1) PRIMARY KEY,
	模型名稱 NVARCHAR(20),
	模型 VARBINARY(MAX),
	建檔時間 DATETIME2(2) DEFAULT SYSDATETIME()
)
GO

ALTER PROC #TempPP @sqlQuery NVARCHAR(MAX),@trainedModel VARBINARY(MAX) OUTPUT
AS
	EXECUTE sp_execute_external_script @language = N'R'
        ,@script = N' 
		inputData<-data.frame(InputDataSet)	
		cs<-colnames(inputData)
		frm<-paste(cs[1], paste(cs[2:length(cs)], collapse="+"), sep="~")
		model <- rxLogisticRegression(frm,inputData,type = "multiClass")		
		trainedModel<-rxSerializeModel(model, realtimeScoringOnly = TRUE)		
		'
		,@input_data_1 = @sqlQuery
		,@params = N'@trainedModel VARBINARY(MAX) OUTPUT'
		,@trainedModel = @trainedModel OUTPUT;
GO

DECLARE @model VARBINARY(MAX);
DECLARE @query nvarchar(max) = N'SELECT [failure]
	, [volt_3m], [volt_3std], [rotate_3m], [rotate_3std], [pressure_3m], [pressure_3std], [vibration_3m], [vibration_3std]
	, [volt_6m], [volt_6std], [rotate_6m], [rotate_6std], [pressure_6m], [pressure_6std], [vibration_6m], [vibration_6std]
	, [volt_12m], [volt_12std], [rotate_12m], [rotate_12std], [pressure_12m], [pressure_12std], [vibration_12m], [vibration_12std]
	, [volt_24m], [volt_24std], [rotate_24m], [rotate_24std], [pressure_24m], [pressure_24std], [vibration_24m], [vibration_24std]
	, [Error1_6hr_Sum], [Error2_6hr_Sum], [Error3_6hr_Sum], [Error4_6hr_Sum], [Error5_6hr_Sum]
	, [SinceLastComp1_Days], [SinceLastComp2_Days], [SinceLastComp3_Days], [SinceLastComp4_Days]
	FROM [dbo].[telemetry_Data3]
	WHERE [_datetime]<''2015-10-1'' AND [model]=''model1''';

EXEC #TempPP @query,@model OUTPUT;
INSERT INTO 模型表_型號(模型名稱,模型) VALUES(N'Model1機台_羅吉斯',@model);

-------------------------------------------------------------------------------------------------------

ALTER PROC #TempPP @sqlQuery NVARCHAR(MAX),@trainedModel VARBINARY(MAX) OUTPUT
AS
	EXECUTE sp_execute_external_script @language = N'R'
        ,@script = N' 
		inputData<-data.frame(InputDataSet)	
		cs<-colnames(inputData)
		frm<-paste(cs[1], paste(cs[2:length(cs)], collapse="+"), sep="~")
		model <- rxNeuralNet(frm,inputData,type = "multiClass")		
		trainedModel<-rxSerializeModel(model, realtimeScoringOnly = TRUE)		
		'
		,@input_data_1 = @sqlQuery
		,@params = N'@trainedModel VARBINARY(MAX) OUTPUT'
		,@trainedModel = @trainedModel OUTPUT;
GO


DECLARE @model VARBINARY(MAX);
DECLARE @query nvarchar(max) = N'SELECT [failure]
	, [volt_3m], [volt_3std], [rotate_3m], [rotate_3std], [pressure_3m], [pressure_3std], [vibration_3m], [vibration_3std]
	, [volt_6m], [volt_6std], [rotate_6m], [rotate_6std], [pressure_6m], [pressure_6std], [vibration_6m], [vibration_6std]
	, [volt_12m], [volt_12std], [rotate_12m], [rotate_12std], [pressure_12m], [pressure_12std], [vibration_12m], [vibration_12std]
	, [volt_24m], [volt_24std], [rotate_24m], [rotate_24std], [pressure_24m], [pressure_24std], [vibration_24m], [vibration_24std]
	, [Error1_6hr_Sum], [Error2_6hr_Sum], [Error3_6hr_Sum], [Error4_6hr_Sum], [Error5_6hr_Sum]
	, [SinceLastComp1_Days], [SinceLastComp2_Days], [SinceLastComp3_Days], [SinceLastComp4_Days]
	FROM [dbo].[telemetry_Data3]
	WHERE [_datetime]<''2015-11-1'' AND [model]=''model1''';

EXEC #TempPP @query,@model OUTPUT;
INSERT INTO 模型表_型號(模型名稱,模型) VALUES(N'Model1機台_類神經',@model);

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--SELECT * FROM 模型表_型號;

DECLARE @model VARBINARY(MAX);
DECLARE @query nvarchar(max) = N'SELECT [failure]
	, [volt_3m], [volt_3std], [rotate_3m], [rotate_3std], [pressure_3m], [pressure_3std], [vibration_3m], [vibration_3std]
	, [volt_6m], [volt_6std], [rotate_6m], [rotate_6std], [pressure_6m], [pressure_6std], [vibration_6m], [vibration_6std]
	, [volt_12m], [volt_12std], [rotate_12m], [rotate_12std], [pressure_12m], [pressure_12std], [vibration_12m], [vibration_12std]
	, [volt_24m], [volt_24std], [rotate_24m], [rotate_24std], [pressure_24m], [pressure_24std], [vibration_24m], [vibration_24std]
	, [Error1_6hr_Sum], [Error2_6hr_Sum], [Error3_6hr_Sum], [Error4_6hr_Sum], [Error5_6hr_Sum]
	, [SinceLastComp1_Days], [SinceLastComp2_Days], [SinceLastComp3_Days], [SinceLastComp4_Days]
	FROM [dbo].[telemetry_Data3]
	WHERE [_datetime]>=''2015-10-1'' AND [model]=''model1''';

DECLARE @mm VARBINARY(MAX);
SELECT @mm=模型 FROM 模型表_型號 WHERE 編號=1;

EXECUTE sp_execute_external_script @language = N'R',  
	@script = N'   
		testData<-data.frame(InputDataSet)				#傳入測試組
		trainedModel<-rxUnserializeModel(inputModel)	#傳入訓練過的模型
				
		result<-rxPredict(trainedModel, data= testData,extraVarsToWrite=c("failure"))			
		OutputDataSet<-result;	
	'
	,@input_data_1=@query
	,@params=N'@inputModel VARBINARY(MAX)'
	,@inputModel=@mm	
;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

--DROP TABLE #TT

CREATE TABLE #TT
(
    實際組別 NVARCHAR(10),
	推薦組別 NVARCHAR(10)
)
GO

DECLARE @model VARBINARY(MAX);
DECLARE @query nvarchar(max) = N'SELECT [failure]
	, [volt_3m], [volt_3std], [rotate_3m], [rotate_3std], [pressure_3m], [pressure_3std], [vibration_3m], [vibration_3std]
	, [volt_6m], [volt_6std], [rotate_6m], [rotate_6std], [pressure_6m], [pressure_6std], [vibration_6m], [vibration_6std]
	, [volt_12m], [volt_12std], [rotate_12m], [rotate_12std], [pressure_12m], [pressure_12std], [vibration_12m], [vibration_12std]
	, [volt_24m], [volt_24std], [rotate_24m], [rotate_24std], [pressure_24m], [pressure_24std], [vibration_24m], [vibration_24std]
	, [Error1_6hr_Sum], [Error2_6hr_Sum], [Error3_6hr_Sum], [Error4_6hr_Sum], [Error5_6hr_Sum]
	, [SinceLastComp1_Days], [SinceLastComp2_Days], [SinceLastComp3_Days], [SinceLastComp4_Days]
	FROM [dbo].[telemetry_Data3]
	WHERE [_datetime]>=''2015-10-1'' AND [model]=''model1''';

DECLARE @mm VARBINARY(MAX);
SELECT @mm=模型 FROM 模型表_型號 WHERE 編號=1;

INSERT INTO #TT
EXECUTE sp_execute_external_script @language = N'R',  
	@script = N'   
		testData<-data.frame(InputDataSet)				#傳入測試組
		trainedModel<-rxUnserializeModel(inputModel)	#傳入訓練過的模型
				
		result<-rxPredict(trainedModel, data= testData,extraVarsToWrite=c("failure"))			
		#OutputDataSet<-result;	
		OutputDataSet<-result[,1:2]
	'
	,@input_data_1=@query
	,@params=N'@inputModel VARBINARY(MAX)'
	,@inputModel=@mm	
;

SELECT * FROM #TT;


ALTER TABLE #TT ADD [Bingo] INT;
UPDATE #TT SET [Bingo]=0;
UPDATE #TT SET [Bingo]=1 WHERE TRIM(實際組別)=TRIM(推薦組別);

SELECT [實際組別],COUNT(*) AS Cnt,SUM([Bingo]) AS [Correct]
	,1.0*SUM([Bingo])/COUNT(*)
FROM #TT
GROUP BY [實際組別];



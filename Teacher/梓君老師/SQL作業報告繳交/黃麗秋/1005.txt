1. 身分證字號檢查

(1) 剛開始想比較簡單,但寫的比較多的方式


while True:
     ID = input('請輸入身分證號碼 ：')
     try:
        ID = repr(ID)  
     except ValueError:
       print ('這是不存在的身分證號.  請再輸入一次')
       continue
        
     if len(ID) ==12 : 
       break


ID=(ID[1:len(ID)-1])  

print("輸入的身分證號碼是",ID)
Sum=0

I=list(ID)   

if I[0]=='A':
   Sum=Sum+1
elif I[0]=='B':
   Sum=Sum+10
elif I[0]=='C':
   Sum=Sum+19
elif I[0]=='D':
   Sum=Sum+28
elif I[0]=='E':
   Sum=Sum+37
elif I[0]=='F':
   Sum=Sum+46
elif I[0]=='G':
   Sum=Sum+55
elif I[0]=='H':
   Sum=Sum+64
elif I[0]=='I':
   Sum=Sum+39
elif I[0]=='J':
   Sum=Sum+73
elif I[0]=='K':
   Sum=Sum+82
elif I[0]=='L':
   Sum=Sum+2
elif I[0]=='M':
   Sum=Sum+11
elif I[0]=='N':
   Sum=Sum+20
elif I[0]=='O':
   Sum=Sum+48
elif I[0]=='P':
   Sum=Sum+29
elif I[0]=='Q':
   Sum=Sum+38
elif I[0]=='R':
   Sum=Sum+47
elif I[0]=='S':
   Sum=Sum+56
elif I[0]=='T':
   Sum=Sum+65
elif I[0]=='U':
   Sum=Sum+74
elif I[0]=='V':
   Sum=Sum+83
elif I[0]=='W':
   Sum=Sum+21
elif I[0]=='X':
   Sum=Sum+3
elif I[0]=='Y':
   Sum=Sum+12
elif I[0]=='Z':
   Sum=Sum+30  
else:
   Sum=Sum+0


Sum1=8*int(I[1])+7*int(I[2])+6*int(I[3])+5*int(I[4])+4*int(I[5])+3*int(I[6])+2*int(I[7])+1*int(I[8])+int(I[9])
Sum=Sum+Sum1
Sum=Sum%10

if Sum==0 :
   print("輸入的身分證號碼",ID,"是正確的")
else :

   print("輸入的身分證號碼",ID,"是不正確的")   
----------------------------------------------------------------------------------------------------------------

(2)後來參考網路比較簡潔寫法

id=input('請輸入身分證字號:')
id=id.upper()   
x1x2={'A':'10','B':'11','C':'12','D':'13','E':'14','F':'15','G':'16',
'H':'17','I':'34','J':'18','K':'19','L':'20','M':'21','N':'22','O':'35',
'P':'23','Q':'24','R':'25','S':'26','T':'27','U':'28','V':'29','W':'32',
'X':'30','Y':'31','Z':'33'}  
N=len(id)  
correct_format=(N==10) and (id[0].isalpha()) and (id[1:N].isdigit())
if correct_format:  
    acode=x1x2.get(id[0])   
    x1=int(acode[0])       
    x2=int(acode[1])        
    i=1     
    sum=0   
    for n in range(8, 0, -1):         
        sum=sum + int(id[i])* n       
        i += 1                        
    sum=x1 + x2*9 + sum + int(id[i])  
    print("總和=", sum)
    remainder=sum % 10
    if remainder==0:
        print("身分證字號正確")
    else:
        print("身分證字號不正確")
else:
    print("身分證字號格式 : 1個英文字母+9個阿拉伯數字")
----------------------------------------------------------------------------------------------------------------
2.大樂透開獎(7個不重複號)
2-1 重抽法
2-2 實際開法


實際開法
import random
Lottery =[]
for i in range(6):
    Lottery.append(random.choice([x for x in range(1,50) if x not in Lottery]))
print(Lottery)

照順序排
import random
lotto =[]
for i in range (6):
    lotto.append(random.choice([x for x in range(1,50) if x not in lotto]))
lotto.sort()
print(lotto)

----------------------------------------------------------------------------------------------------------------

3.選擇/插入/泡沫 排序法
3-1 快速排序法
#泡沫排序法
def bubble_sort(nLst):
    length = len(nLst)
    for i in range(length-1):
        print("第%d次外圈排序" % (i+1))
        for j in range(length-1-i):
            if nLst[j] > nLst[j+1]:
                nLst[j], nLst[j+1] = nLst[j+1],nLst[j]
            print("第%d 次內圈排序 : " % (j+1), nLst)
    return nLst

data = [6,1,5,7,3]
print("原始串列 : ", data)
----------------------------------------------------------------------------------------------------------------
#選擇排序法
def selection_sort(nLst):
    for i in range(len(nLst)-1):
        index = i
        for j in range(i+1, len(nLst)):
            if nLst[index] > nLst[j]:
                index = j
        if i == index:
            pass
        else:
            nLst[i], nLst[index] = nLst[index],nLst[i]
        print("第%d次迴圈排序" % (i+1), nLst)
    return nLst

data = [6,1,5,7,30]
print("原始串列: ", data)
print("排序結果: ", selection_sort(data))
----------------------------------------------------------------------------------------------------------------
#插入排序法
def insertion_sort(nLst):
    '''插入排序'''
    n = len(nLst)
    if n == 1:
        print("第%d次迴圈排序" %n, nLst)
        return nLst
    print("第1次迴圈排序", nLst)
    for i in range(1,n):
        for j in range(i,0,-1):
            if nLst[j] < nLst[j-1]:
                nLst[j], nLst[j-1] = nLst[j-1], nLst[j]
            else: 
                break
        print ("第%d次迴圈排序" % (i+1), nLst)
    return nLst

data = [6,1,5,7,3]
print("原始串列: ", data)
print("排序結果: ", insertion_sort(data))
----------------------------------------------------------------------------------------------------------------
#快速排序法
import random

def quick_sort(nLst):
    '''快速排序法'''
    if len(nLst) <=1:
       return nLst

    left = []
    right =[]
    piv =[]
    pivot = random.choice(nLst)
    for val in nLst:
       if val == pivot:
          piv.append(val)
        elif val < pivot:
            left.append(val)
        else:
            right.append(val)
    return quick_sort(left) + piv + quick_sort(right)

data = [6,1,5,7,3,9,4,2,8]
print("原始串列 : ", data)
print("排序結果 : ", quick_sort(data))
